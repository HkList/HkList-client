##================Aria2 Explorer 优化配置================##

# 作者：Alex Hua
# 主页：https://www.aria2e.com

# 作者：P3TERX
# 主页：https://p3terx.com

# 整合：太极
# 主页：https://www.zhihu.com/people/Drivind

# MIT License

##================文件保存设置================##

# 下载目录【默认: 当前启动位置】
# 可使用绝对路径或相对路径
# dir=F:\

# 磁盘缓存【默认：16M】
# 将文件临时下载到内存，集中写入硬盘，减少硬盘I/O，延长寿命
# 内存足够时可适当增加，0为禁用缓存
disk-cache=256M

# 文件预分配方式【默认：prealloc】
# 可选：none, prealloc, trunc, falloc
# 预分配对于机械硬盘可有效降低磁盘碎片、提升磁盘读写性能、延长磁盘寿命
# 固态硬盘不需要预分配，请设置为none，否则可能导致双倍数据写入
# 机械硬盘建议 falloc，但需要Aria2以管理员身份运行
# 若提示fallocate failed.cause：Operation not supported说明不支持，请设置为none
# prealloc遇到大文件时会导致性能问题，Aria2在下载大文件时会假死一段时间
# trunc不能减少磁盘碎片产生
file-allocation=none

# 文件预分配大小限制【默认：5M】
# 小于此选项值大小的文件不预分配空间
no-file-allocation-limit=64M

# 断点续传
# 目前只支持HTTP(S)/FTP下载的文件
continue=true

# 始终尝试断点续传，无法断点续传则终止下载【默认：true】
always-resume=false

# 不支持断点续传的 URI 数值，当 always-resume=false 时生效
# 达到这个数值从将头开始下载，值为 0 时所有 URI 不支持断点续传时才从头开始下载
max-resume-failure-tries=0

# 获取服务器文件时间【默认：false】
remote-time=true


##================进度保存设置================##

# 从会话文件中读取下载任务
# input-file=aria2.session

# 会话文件保存路径
# Aria2 退出时或指定的时间间隔会保存`错误/未完成`的下载任务到会话文件
# save-session=aria2.session

# 任务状态改变后保存会话的间隔时间（秒）【默认：0】
# 0 为仅在进程正常退出时保存
# 为了及时保存任务状态、防止任务丢失，此项值只建议设置为 1
save-session-interval=1

# 自动保存任务进度到控制文件(*.aria2)的间隔时间（秒）【默认：60】
# 0 为仅在进程正常退出时保存
# 此项值也会间接影响从内存中把缓存的数据写入磁盘的频率
# 想降低磁盘 IOPS (每秒读写次数)则提高间隔时间
# 想在意外非正常退出时尽量保存更多的下载进度则降低间隔时间
# 非正常退出：进程崩溃、系统崩溃、SIGKILL 信号、设备断电等
auto-save-interval=20

# 强制保存，即使任务已完成也保存信息到会话文件【默认：false】
# 开启后会在任务完成后保留 .aria2 文件，文件被移除且任务存在的情况下重启后会重新下载
# 关闭后已完成的任务列表会在重启后清空
# force-save=false

##================下载连接设置================##

# 文件未找到重试次数【默认：0】
# 重试时同时会记录重试次数，所以也需要设置 max-tries 这个选项
max-file-not-found=4

# 最大尝试次数【默认：5】
# 0 表示无限
max-tries=16

# 重试等待时间（秒）【默认：0】
# 0 为禁用
retry-wait=8

# 连接超时时间（秒）【默认：60】
connect-timeout=60

# 超时时间（秒）【默认：60】
timeout=60

# 最大同时下载任务数【默认:5】
max-concurrent-downloads=16

# 单服务器最大连接线程数【默认：1】
# 最大值为 16 ,且受限于单任务最大连接线程数(split)所设定的值。
max-connection-per-server=16

# 单任务最大连接线程数【默认：5】
split=16

# 文件最小分段大小【默认：20M】
# 取值范围 1M-1024M
# 比如此项值为 10M, 当文件为 20MB 会分成两段并使用两个来源下载, 文件为 15MB 则只使用一个来源下载
# 理论上值越小使用下载分段就越多，所能获得的实际线程数就越大，下载速度就越快，但受限于所下载文件服务器的策略
min-split-size=4M

# HTTP/FTP 下载分片大小【默认：1M】
# 所有分割都必须是此项值的倍数，最小值为 1M
# piece-length=1M

# 允许分片大小变化【默认：false】
# false：当分片大小与控制文件中的不同时将会中止下载
# true：丢失部分下载进度继续下载
allow-piece-length-change=true

# 最低下载速度限制【默认：0】
# 0 为不限制
# 当下载速度低于或等于此选项的值时关闭连接
# 此选项与 BT 下载无关
# lowest-speed-limit=0

# 全局最大下载速度限制【默认：0】
# 0 为不限制
# max-overall-download-limit=0

# 单任务下载速度限制【默认：0】
# 0 为不限制
# max-download-limit=0

# 禁用 IPv6【默认：false】
# disable-ipv6=false

# GZip 支持【默认：false】
http-accept-gzip=true

# URI 复用【默认：true】
reuse-uri=false

# 禁用 netrc 支持【默认：false】
no-netrc=true

# 允许覆盖【默认：false】
# 当相关控制文件(.aria2)不存在时从头开始重新下载
# allow-overwrite=false

# 文件自动重命名【默认：true】
# 仅 HTTP(S)/FTP 下载中有效
# 新文件名在名称之后扩展名之前加上一个点和一个数字（1..9999）
# auto-file-renaming=true

# 使用 UTF-8 处理 Content-Disposition【默认：false】
content-disposition-default-utf8=true

# 最低 TLS 版本【默认:TLSv1.2】
# 可选：TLSv1.1、TLSv1.2、TLSv1.3
# min-tls-version=TLSv1.2

##================RPC设置================##

# 启用 JSON-RPC/XML-RPC 服务器【默认：false】
enable-rpc=true

# 接受所有远程请求【默认：false】
rpc-allow-origin-all=true

# 允许外部访问【默认：false】
rpc-listen-all=true

# RPC 监听端口【默认：6800】
rpc-listen-port=26800

# RPC 密钥
rpc-secret=hklist-client

# RPC 最大请求大小
rpc-max-request-size=10M

# RPC 服务 SSL/TLS 加密, 默认：false
# 启用加密后必须使用 https 或者 wss 协议连接
# 不推荐开启，建议使用 web server 反向代理，比如 Nginx、Caddy ，灵活性更强
# rpc-secure=false

# 在 RPC 服务中启用 SSL/TLS 加密时的证书文件(.pem/.crt)
# rpc-certificate=/root/.aria2/xxx.pem

# 在 RPC 服务中启用 SSL/TLS 加密时的私钥文件(.key)
# rpc-private-key=/root/.aria2/xxx.key

# 事件轮询方式【不同系统默认值不同】
# 可选：epoll, kqueue, port, poll, select
# event-poll=select
